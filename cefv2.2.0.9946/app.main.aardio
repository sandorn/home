import win.ui;
/*DSG{{*/
var mainForm = win.form(text="cef3";right=795;bottom=560;bgcolor=12632256;border="none")
mainForm.add(
custom={cls="custom";text="custom";left=4;top=32;right=792;bottom=557;bgcolor=16777215;db=1;dl=1;dr=1;dt=1;z=1}
)
/*}}*/

import web.cefx.app;
var app = web.cefx.app(mainForm.custom);
var cef3 = app.getBrowser()

cef3.onBrowserReady = function() {
    cef3.downloadScripts = true; //允许下载脚本
    app.start("/res/index.aardio"); //启动应用程序,必须写在onBrowserReady事件里 
}

/*
在下面的external对象中指定允许CEF3中使用JS直接调用的函数
在网页中直接引用"/aardio.js"下面的external 会自动转换为js中的aardio对象.
"/aardio.js"是由 aardio虚拟的JS文件(不用自己准备这个文件)。
*/
app.external = {

    //加载一个页面完成会触发这个事件(要求引用了"/aardio.js")
    $onLoadUrl = function($, url) {

        // 接收js函数的返回值
        app.callback("hello", function(hSocket, result, err) {
            mainForm.msgbox(result: err, "调用js的hello函数以后返回值了");
        })

        // 调用JS函数
        app.survey("hello", "aardio");
    }
    test = function() {
        cef3.showDevTools()
    }
}

// WebSocke/RPC中遇到的错误都会触发这个函数,可以在这里自定义错误处理方式
app.ws.onError = function(hSocket, err) {
    errput(err, "CEF3/rpc error"); //当然也可以在 global.onError 里自定义全部的错误信息怎么显示
}

mainForm.show(true);

import win.ui.simpleWindow;
win.ui.simpleWindow(mainForm);
win.loopMessage();
