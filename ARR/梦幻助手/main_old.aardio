//RUNAS//王者霸业cef//DM

_USE_DM = true //大漠或是winex开关
var G_dm
if(_USE_DM) {
    import dm;
    G_dm = dm();
}

//调试模式
if(!_STUDIO_INVOKED) {
    import xJlib.console
    xJlib.console.set(false)
    print = xJlib.console.print
    if(_USE_DM) {
        print("USE 大漠,Ver:", G_dm.ver())
    }
    else {
        print("USE WinEx")
    }
}

import win.ui;
/*DSG{{*/
var winform = win.form(text="梦幻助手";right=1195;bottom=737;border="none";exmode="toolwindow")
winform.add(
BindRun={cls="plus";text="绑定";left=21;top=697;right=81;bottom=715;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=4};
BindStop={cls="plus";text="解绑";left=96;top=696;right=156;bottom=714;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=5};
KeyRun={cls="plus";text="按键模拟";left=21;top=16;right=81;bottom=34;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=6};
KeyStop={cls="plus";text="按键停止";left=96;top=16;right=156;bottom=34;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=7};
MouseRun={cls="plus";text="鼠标模拟";left=21;top=349;right=81;bottom=367;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=8};
MouseStop={cls="plus";text="鼠标停止";left=96;top=350;right=156;bottom=368;bgcolor=-5197169;dl=1;font=LOGFONT(name='等距更纱黑体 SC');notify=1;z=9};
custom={cls="custom";text="自定义控件";left=178;top=21;right=1178;bottom=721;z=11};
editxy={cls="edit";text="0,0";left=112;top=389;right=151;bottom=410;align="right";color=32768;dr=1;edge=1;z=1};
listview={cls="listview";left=13;top=46;right=159;bottom=333;edge=1;z=10};
plusCur={cls="plus";left=29;top=384;right=61;bottom=416;background="\res\1.gif";dr=1;notify=1;repeat="center";z=3};
static={cls="static";text="坐标";left=75;top=391;right=103;bottom=410;dr=1;notify=1;transparent=1;z=2}
)
/*}}*/

//防止多次启动
import win.ui.atom;
var atom, hwnd = winform.atom("{D3A2B3B7-CB97-4124-BA8D-060D24C5DE3D}");
if(!atom) {
    win.show(hwnd)
    win.setForeground(hwnd);
    win.quitMessage();
    return;
}
mycss = {
    background = {
        //active=0xFFD3E0BC;
        default = 0xFF8FB2B0;
        //hover=0xFF928BB3
    }
    color = {
        hover = 0xFFFF0000;
        active = 0xFF00FF00;
    }
}
winform.MouseRun.skin(mycss)
winform.KeyRun.skin(mycss)
winform.KeyStop.skin(mycss)
winform.MouseStop.skin(mycss)
winform.BindRun.skin(mycss)
winform.BindStop.skin(mycss)

import xJlib.ctrl.listviewExx;
var lst = xJlib.ctrl.listviewExx(winform.listview)
lst.setFont(point = 5; name = 'FontAwesome')
lst.setTitle({
    /*设置标题值*/
    {
        "ID";
        "K?M";
        "K?POS";
        "Dalay";
    }; {
        20;
        30;
        60; - 1;
    }
})
lst.addItem({
    text = {
        "1";
        "K";
        "A";
    }
})
lst.addItem({
    text = {
        "2";
        "M";
        "100,200";
    }
})
lst.addItem({
    text = {
        "3";
        "M";
        "300,200";
    }
})
lst.setTextclr(0x0000FF, 1, 2)
lst.bgclr246 = 0x66ccee; /*偶数行颜色*/
lst.bgclr135 = 0xFFF0E6; /*奇数行颜色*/
lst.setCheckbox(2, 1, true, "checkbox");

import xJlib.tray
var mytray = xJlib.tray(winform, , false, false)

//吸附
/*
import xJlib.ctrl.dock
var wndObj = xJlib.ctrl.dock(winform, 30);
winform.onMouseDown = function(wParam, lParam) {
    owner.hitCaption()
}
*/

/*线程内函数{{*/
import thread.command;
import winex.key
import winex.mouse
import xJlib.console
var listener = thread.command();
listener.print = function( ... ) {
    print( ... )
}
listener.log = function( ... ) {
    xJlib.console.printtolog( ... )
}
listener.bind = function(hwnd) {
    if(_USE_DM) {
        listener.dm("绑定窗口", hwnd, "gdi", "windows3", "windows", "dx.public.fake.window.min|dx.public.hack.speed", 101)
        listener.dm('HackSpeed', 1.2) //加速，1.0为原速
        //win.setParent(hwnd,winform.static3.hwnd)
    }
    win.setFocus(hwnd)
}
listener.key = function(hwnd, keyvalve) {
    win.setFocus(hwnd)
    if(_USE_DM) {
        print(48 + keyvalve)
        listener.dm("KeyPress", 48 + keyvalve)
    }
    else {
        winex.key.send(hwnd, tostring(keyvalve))
    }
}
listener.mouse = function(hwnd, x, y) {
    win.setFocus(hwnd)
    if(_USE_DM) {
        listener.dm("鼠标移动单击", x, y)
    }
    else {
        winex.mouse.click(hwnd, tonumber(x), tonumber(y))
    }
}
listener.dm = function(func, ... ) {
    if(_USE_DM) {
        G_dm[func]( ... )
    }
}
import thread.table;
var thrdTable = thread.table("共享参数表", true /*清空*/ )
thrdTable.flag = true
thrdTable.flag_mouse = true
thrdTable.flag_huishou = true
/*}}*/

/*异步查找游戏窗口{{*/
import winex;
winform.BindRun.oncommand = function(id, event) {
    listener.dm("UnBindWindow", )
    thrdTable.hwnd = winex.waitVisible("贪玩游戏盒", , "com\.zx\.box")
    listener.bind(thrdTable.hwnd)
    winex.orphanWindow(winform.custom, thrdTable.hwnd)
    winform.BindRun.disabled = true
    winform.BindStop.disabled = false
}
winform.BindStop.oncommand = function() {
    listener.dm("UnBindWindow")
    winform.BindRun.disabled = false
    winform.BindStop.disabled = true
}
/*}}*/

/*鼠标拖动定位{{*/
import win.cur;
import mouse
winform.plusCur.skin(background = {
    active = "\res\2.gif";
})
var hCursor = win.cur.loadfile("\res\spy.cur");
winform.plusCur.onMouseDown = function(wParam, lParam) {
    win.cur.beginCur();
    // winform.plusCur.background = "\res\1.gif"
    winform.plusCur.capture = true;
}
winform.plusCur.onMouseUp = function(wParam, lParam) {
    winform.plusCur.capture = false;
    win.cur.endCur();
}
tmid = winform.setInterval(function(hwnd, msg, id, tick) {
    if(win.cur.beginning) {
        var x, y = mouse.getPos();
        x, y = win.toClient(thrdTable.hwnd, x, y);
        winform.editxy.text = ..string.format("%d,%d", x, y)
    }
}, 300)
/*}}*/

/*按键模拟{{*/
winform.KeyRun.oncommand = function(id, event) {
    thread.invoke(function(winform, thrdTable, listener) {
        thrdTable.flag = true //设置按键模拟开始信号
        winform.KeyRun.disabled = true
        winform.KeyStop.disabled = false
        do {
            for(index = 1; 8; 1) {
                if(winform['checkbox' + index].checked) {
                    listener.key(thrdTable.hwnd, index)
                    sleep(tonumber(winform['edit' + index].text))
                }
            }
        } while(thrdTable.flag);
    }, winform, thrdTable, listener)
}
winform.KeyStop.oncommand = function(id, event) {
    thrdTable.flag = false //设置按键模拟结束信号
    winform.KeyRun.disabled = false
    winform.KeyStop.disabled = true
}
/*}}*/

/*鼠标模拟{{*/
winform.MouseRun.oncommand = function() {
    thread.invoke(function(winform, thrdTable, listener) {
        import string
        import win
        thrdTable.flag_mouse = true //设置鼠标模拟开始信号
        win.setFocus(thrdTable.hwnd) //设置键盘输入焦点
        winform.MouseRun.disabled = true
        winform.MouseStop.disabled = false
        do {
            for(index = 1; 8; 1) {
                if(winform['ck' + index].checked and winform["editxy" + index].text != "0,0") {
                    TMP_poin = string.split(winform["editxy" + index].text, "<,>")
                    listener.mouse(thrdTable.hwnd, TMP_poin[1], TMP_poin[2])
                    sleep(tonumber(winform['editt' + index].text))
                }
            }
        } while(thrdTable.flag_mouse);
    }, winform, thrdTable, listener)
}
winform.MouseStop.oncommand = function(id, event) {
    thrdTable.flag_mouse = false //设置鼠标模拟开始信号
    winform.MouseRun.disabled = false
    winform.MouseStop.disabled = true
}
/*}}*/

winform.onClose = function(hwnd, message, wParam, lParam) {
    if(thrdTable.flag or thrdTable.flag_mouse) {
        winform.setTimeout(function() {
            winform.KeyStop.oncommand()
            winform.MouseStop.oncommand()
        }, 50)
    }
    mytray.delete()
}

win.setPos(winform.hwnd, 0, 0);

import win.ui.minmax;
win.ui.minmax(winform)

import win.ui.shadow
win.ui.shadow(winform).setResizeBorder(false)

winform.show() //3/*_SW_SHOWMAXIMIZED*/
win.loopMessage()
